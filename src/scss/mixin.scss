@mixin clearfix {
	*zoom: 1;
	&:before,
	&:after {
		content: " ";
		display: table;
	}
	&:after {
		clear: both;
	}
}

@mixin gradient($from, $to) {
  background: -webkit-linear-gradient(top,  $from, $to);
  background: -moz-linear-gradient(top,  $from, $to);
  background: -o-linear-gradient(top,  $from, $to);
  background: -ms-linear-gradient(top,  $from, $to);
  background: -linear-gradient(top,  $from, $to);
  filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
}

// аргументы писать в кавычках
@mixin ie-rgba($opacity, $color) {
	filter: progid:DXImageTransform.Microsoft.gradient(GradientType=0,startColorstr='##{$opacity}#{$color}', endColorstr='##{$opacity}#{$color}');
}

@mixin border-radius ($radius) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
	-moz-background-clip: padding;
	-webkit-background-clip: padding-box;
	background-clip: padding-box;
}

@mixin box-shadow ($string) {
	-webkit-box-shadow: $string;
	-moz-box-shadow: $string;
	box-shadow: $string;
}

@mixin transition ($transition) {
	-webkit-transition: $transition;
	-moz-transition: $transition;
	-ms-transition: $transition;
	-o-transition: $transition;
	transition: $transition;
}

@mixin opacity($opacity) {
	opacity: $opacity / 100;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(opacity=#{$opacity})";
}

@mixin placecolor($color) {
    &::-webkit-input-placeholder {
        color: $color;
    }
    &:-moz-placeholder {
        color: $color;
    }
    &::-moz-placeholder {
        color: $color;
    }
    &:-ms-input-placeholder {
        color: $color;
    }
}